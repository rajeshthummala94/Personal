// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MyComponent Rendering Login Page 1`] = `
<div
  className="container-fluid"
>
  <div
    className="row align-items-center h-100 "
  >
    <div
      className="col-md-6-fluid"
    >
      <img
        alt=""
        className="img-responsive fit-image"
        src="login-page-burger.png"
      />
    </div>
    <div
      className="col-md-4 mx-auto"
    >
      <div
        className="card shadow p-3 mb-5 rounded"
      >
        <div
          className="card-body text-left"
        >
          <h4
            className="text-black text-left font-weight-bold"
          >
            Sign in with your Grubhub 
            <br />
            account
          </h4>
          <br />
          <Formik
            enableReinitialize={false}
            initialValues={
              Object {
                "authFlag": "false",
                "email": "",
                "password": "",
              }
            }
            isInitialValid={false}
            onSubmit={[Function]}
            validateOnBlur={true}
            validateOnChange={true}
            validationSchema={
              ObjectSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_defaultDefault": [Function],
                "_deps": Array [],
                "_excludedEdges": Array [],
                "_exclusive": Object {},
                "_mutate": undefined,
                "_nodes": Array [
                  "password",
                  "email",
                ],
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "object",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "fields": Object {
                  "email": StringSchema {
                    "_blacklist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "_conditions": Array [],
                    "_deps": Array [],
                    "_exclusive": Object {
                      "required": true,
                      "undefined": false,
                    },
                    "_mutate": undefined,
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "string",
                    "_typeError": [Function],
                    "_whitelist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "tests": Array [
                      [Function],
                      [Function],
                    ],
                    "transforms": Array [
                      [Function],
                    ],
                  },
                  "password": StringSchema {
                    "_blacklist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "_conditions": Array [],
                    "_deps": Array [],
                    "_exclusive": Object {
                      "required": true,
                    },
                    "_mutate": undefined,
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "string",
                    "_typeError": [Function],
                    "_whitelist": RefSet {
                      "list": Set {},
                      "refs": Map {},
                    },
                    "tests": Array [
                      [Function],
                    ],
                    "transforms": Array [
                      [Function],
                    ],
                  },
                },
                "tests": Array [],
                "transforms": Array [
                  [Function],
                ],
              }
            }
          >
            <Component />
          </Formik>
          <br />
          Don't have an account?  
          <Link
            to="/customersignup"
          >
            Create your customer account!
          </Link>
          <br />
          Want to partner with us? 
          <Link
            to="/ownersignup"
          >
            Create your owner account!
          </Link>
        </div>
      </div>
    </div>
  </div>
</div>
`;
